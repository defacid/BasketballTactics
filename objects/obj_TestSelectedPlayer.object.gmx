<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Default Player Stats
name = "Jevon Vhames";
faceColor = make_color_rgb(90, 55, 0);
team = 1; //0 Home - 1 Away
height = 6*12+7;
weight = 220;
post = 50;
midRange = 50;
threePoint = 50;
freeThrow = 50;
pass = 50;
quickness = 50;
stamina = 50;
strength = 50;
block = 50;
rebound = 50;
steal = 50;
teamColor = c_white;

//Init
possession = 1;
ballHandler = 1;
dribble = 0;
target = obj_awayHoop;
selected = 1;

switch(team) {
    case 0:
        //teamColor = make_color_rgb(46, 49, 146);
        teamColor = make_color_rgb(75, 75, 175);
        break;
    case 1:
        //teamColor = make_color_rgb(121, 0, 0);
        teamColor = make_color_rgb(150, 25, 25);
        break;
    default:
        teamColor = make_color_rgb(random(255), random(255), random(255));
        break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var dir, dis;
dir = point_direction(x, y, target.x, target.y);
dis = point_distance(x, y, target.x, target.y);

if (selected) {
    //Outline
    draw_set_color(c_white);
    draw_circle(x + lengthdir_x(10, dir + 90), y + lengthdir_y(10, dir + 90), 7, 0);
    draw_circle(x + lengthdir_x(10, dir - 90), y + lengthdir_y(10, dir - 90), 7, 0);
    draw_line_width(x + lengthdir_x(11, dir + 90), y + lengthdir_y(11, dir + 90), x + lengthdir_x(11, dir - 90), y + lengthdir_y(11, dir - 90), 18);
}

if (ballHandler) {
    dribble = (dribble + 15) mod 360;
    draw_sprite_ext(spr_basketball, 0, x + lengthdir_x(8, dir - 90) + lengthdir_x(8, dir), y + lengthdir_y(8, dir - 90) + lengthdir_y(8, dir), 0.3 + 0.05*sin(degtorad(dribble)), 0.3 + 0.05*sin(degtorad(dribble)), 0, c_white, 1);
}

//DEBUG
var col, targetX, targetY, xx, yy;
xx = x;
yy = y;

with (obj_homePlayer) {
    draw_set_color(teamColor);
    if (point_distance(xx, yy, x, y) &lt;= 64) {
        targetX = x;
        targetY = y;
        col = teamColor;
        with(obj_floorUI) {
            surface_set_target(ui);
            draw_set_alpha(0.5);
            draw_set_color(col);
            draw_line_width(xx, yy, targetX, targetY, 4);
            surface_reset_target();
        }
    }
}


//Shadow
draw_set_alpha(0.1);
draw_set_color(c_black);
draw_circle(x + lengthdir_x(10, dir + 90) + 1, y + lengthdir_y(10, dir + 90) + 2, 7, 0);
draw_circle(x + lengthdir_x(10, dir - 90) + 1, y + lengthdir_y(10, dir - 90) + 2, 7, 0);
draw_line_width(x + lengthdir_x(11, dir + 90), y + lengthdir_y(11, dir + 90) + 1, x + lengthdir_x(11, dir - 90), y + lengthdir_y(11, dir - 90) + 2, 18);
draw_set_alpha(1);

//Arms
draw_set_color(faceColor);
draw_circle(x + lengthdir_x(10, dir + 90), y + lengthdir_y(10, dir + 90), 6, 0);
draw_circle(x + lengthdir_x(10, dir - 90), y + lengthdir_y(10, dir - 90), 6, 0);

//Jersey
draw_set_alpha(1);
draw_set_color(teamColor);
draw_line_width(x + lengthdir_x(10, dir + 90), y + lengthdir_y(10, dir + 90), x + lengthdir_x(10, dir - 90), y + lengthdir_y(10, dir - 90), 16);

//Head Shadow
draw_set_alpha(0.1);
draw_set_color(c_black);
draw_circle(x, y - 1, 6, 0);
draw_set_alpha(1);

//Head
draw_set_color(faceColor);
draw_circle(x, y - 2, 6, 0);
draw_set_alpha(1);

/*
//Fake Movement
draw_set_alpha(0.75);
draw_set_color(teamColor);

draw_rectangle(x - 15, y - 15 - 32, x + 15, y + 15 - 32, 0);
draw_rectangle(x - 15 - 32, y - 15, x + 15 - 32, y + 15, 0);
draw_rectangle(x - 15, y - 15 + 32, x + 15, y + 15 + 32, 0);
draw_rectangle(x - 15 + 32, y - 15, x + 15 + 32, y + 15, 0);

draw_set_alpha(0.25);
draw_rectangle(x - 15, y - 15 - 64, x + 15, y + 15 - 64, 0);
draw_rectangle(x - 15 - 64, y - 15, x + 15 - 64, y + 15, 0);
draw_rectangle(x - 15, y - 15 + 64, x + 15, y + 15 + 64, 0);
draw_rectangle(x - 15 + 64, y - 15, x + 15 + 64, y + 15, 0);
draw_rectangle(x - 15 - 32, y - 15 - 32, x + 15 - 32, y + 15 - 32, 0);
draw_rectangle(x - 15 - 32, y - 15 + 32, x + 15 - 32, y + 15 + 32, 0);
draw_rectangle(x - 15 + 32, y - 15 + 32, x + 15 + 32, y + 15 + 32, 0);
draw_rectangle(x - 15 + 32, y - 15 - 32, x + 15 + 32, y + 15 - 32, 0);
*/

draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
